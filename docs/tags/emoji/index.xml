<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Emoji on Nitta Labo Tutorial</title>
    <link>http://localhost:61148/tags/emoji/</link>
    <description>Recent content in Emoji on Nitta Labo Tutorial</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 05 Mar 2019 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:61148/tags/emoji/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>AndroidStudio</title>
      <link>http://localhost:61148/post/android_studio/</link>
      <pubDate>Tue, 05 Mar 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:61148/post/android_studio/</guid>
      <description>&lt;p&gt;手順を説明します🐘&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 NewProjectを押します&lt;br&gt;&#xA;&lt;img src=&#34;http://localhost:61148/images/app1.png&#34; alt=&#34;images&#34;&gt;&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 Empty Views Activity を押します&lt;br&gt;&#xA;&lt;img src=&#34;http://localhost:61148/images/app2.png&#34; alt=&#34;images&#34;&gt;&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 Nameにタイトルを入力&lt;br&gt;&#xA;🌷 Build configuration languageをKotlinにする&lt;br&gt;&#xA;🌷 Minimum SDKを API30 にする&lt;br&gt;&#xA;&lt;img src=&#34;http://localhost:61148/images/app3.png&#34; alt=&#34;images&#34;&gt;&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 左上がProjectとなっていますが、準備中なので、「Android」と表示されるまで待ちます&lt;br&gt;&#xA;&lt;img src=&#34;http://localhost:61148/images/app4.png&#34; alt=&#34;images&#34;&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 今、右で表示されている MainActivity.java のファイルの位置を確認します&lt;br&gt;&#xA;🌷 ＞をクリックしていきます&#xA;&lt;img src=&#34;http://localhost:61148/images/app5.png&#34; alt=&#34;images&#34;&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 Androidでは画面のことをActivityといいます&lt;br&gt;&#xA;🌷 １つの画面ごとに [画面名]Activity.java と、 activity_[画面名].xml の2つを作ります&lt;br&gt;&#xA;🌷 プロジェクトツールウィンドウ（左の部分）を見ると、app/java/com/example/lessonに MainActivity.java があることが分かります。&lt;br&gt;&#xA;🌷 次に、activity_main.xml を押しましょう&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:61148/images/app6.png&#34; alt=&#34;images&#34;&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷このxmlでは、一つの画面のレイアウトをいじります。（後で戻ってくるので理解はざっくりでok）&#xA;&lt;img src=&#34;http://localhost:61148/images/app7.png&#34; alt=&#34;images&#34;&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 プロジェクト全体をコンパイルすることをビルドといいます&lt;br&gt;&#xA;（コンパイルとは、コードを機械言語に変換することだが、javaの場合はコードと機械言語の中間に値する中間言語に変換する）&lt;br&gt;&#xA;🌷 🐘build.gradle.ktsにはビルドの設定と、使用するライブラリが書かれています。&lt;br&gt;&#xA;🌷 今回は通信をするためにretrofit2というライブラリを使うので、これから設定していきます。&lt;br&gt;&#xA;🌷 それでは、build.gradle.kts をあけます。&lt;br&gt;&#xA;&lt;img src=&#34;http://localhost:61148/images/app8.png&#34; alt=&#34;images&#34;&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 retrofitをダウンロードできるように以下を追加します。&lt;br&gt;&#xA;🌷 エラーが出ますが、右上の 🐘を押すとビルドされ、エラーは消えます。&#xA;&lt;img src=&#34;http://localhost:61148/images/app55.png&#34; alt=&#34;images&#34;&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 次に MainActivity の名前を SignUpActivity に変えます。&lt;br&gt;&#xA;🌷 figmaでは３つの画面を作りましたね&lt;br&gt;&#xA;🌷 後ほど、SettingsActivity.java や AccountListActivity.java も作成します。&#xA;&lt;img src=&#34;http://localhost:61148/images/app56.png&#34; alt=&#34;images&#34;&gt;&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷  MainActivityを右クリックして、Refactorを押し、Renameを押します。&#xA;&lt;img src=&#34;http://localhost:61148/images/app11.png&#34; alt=&#34;images&#34;&gt;&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 すると以下の画面が出てくるので、figmaに設定したのと同じ名前（にしたら分かりやすい）に変更します。&lt;br&gt;&#xA;～単語の先頭は大文字にするのが一般的～&lt;br&gt;&#xA;&lt;img src=&#34;http://localhost:61148/images/app12.png&#34; alt=&#34;images&#34;&gt;&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 同じように、レイアウトの名前も分かりやすいように変えます。&#xA;&lt;img src=&#34;http://localhost:61148/images/app13.png&#34; alt=&#34;images&#34;&gt;&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷mainの部分をsign_upなどと分かりやすいように変えます。&lt;br&gt;&#xA;～単語の先頭は小文字にし、大文字の前に_を入れるのが一般的（画像は_が入ってないけど無視してください）～&lt;br&gt;&#xA;&lt;img src=&#34;http://localhost:61148/images/app14.png&#34; alt=&#34;images&#34;&gt;&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 次に、com/example/lessonの下にPakageをviews,models,restの3つ作ります。&lt;br&gt;&#xA;🌷 理由は、後でファイルを探すときに困るので、整理するために作っておきます。&lt;br&gt;&#xA;&lt;img src=&#34;http://localhost:61148/images/app15.png&#34; alt=&#34;images&#34;&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 まず、viewsパッケージを作ります。&#xA;&lt;img src=&#34;http://localhost:61148/images/app16.png&#34; alt=&#34;images&#34;&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷viewsというPackageにSignUpActivityをドラック＆ドロップする。（viewの中に入れる）&#xA;&lt;img src=&#34;http://localhost:61148/images/app17.png&#34; alt=&#34;images&#34;&gt;&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 Refactorを押す&lt;br&gt;&#xA;&lt;img src=&#34;http://localhost:61148/images/app18.png&#34; alt=&#34;images&#34;&gt;&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 次にviewsと同じ階層にmodelsパッケージを作りたいです。&lt;br&gt;&#xA;🌷 com.example.lesson.viewsとあるが、お構いなしに右クリックを押す。&#xA;&lt;img src=&#34;http://localhost:61148/images/app20.png&#34; alt=&#34;images&#34;&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 com.example.lesson.viewsの、viewsを消して、modelsと書き換えることで、同じ階層にPackageが作られます。&#xA;&lt;img src=&#34;http://localhost:61148/images/app21.png&#34; alt=&#34;images&#34;&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 modelパッケージの中にはAccount.javaを作ります。&#xA;&lt;img src=&#34;http://localhost:61148/images/app23.png&#34; alt=&#34;images&#34;&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 Accountと入力&#xA;&lt;img src=&#34;http://localhost:61148/images/app24.png&#34; alt=&#34;images&#34;&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 Account.javaには、Intellijに書かれたAccount.javaのコードをそのまま貼り付ける&lt;br&gt;&#xA;🌷 ↓はIntelij&#xA;&lt;img src=&#34;http://localhost:61148/images/app80.png&#34; alt=&#34;images&#34;&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 次にviewsやmodelsと同じ階層にrestパッケージを作りたいです。&lt;br&gt;&#xA;🌷 com.example.lessonを右クリックする。&#xA;&lt;img src=&#34;http://localhost:61148/images/app25.png&#34; alt=&#34;images&#34;&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 restと入力&#xA;&lt;img src=&#34;http://localhost:61148/images/app26.png&#34; alt=&#34;images&#34;&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 restパッケージの中にはAccountRest.javaを作る&#xA;&lt;img src=&#34;http://localhost:61148/images/app27.png&#34; alt=&#34;images&#34;&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 AccountRestと入力し、Interfaceを選択する&#xA;&lt;img src=&#34;http://localhost:61148/images/app28.png&#34; alt=&#34;images&#34;&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 作られました(o^―^o)ﾆｺ&#xA;&lt;img src=&#34;http://localhost:61148/images/app29.png&#34; alt=&#34;images&#34;&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 ここでは、IntellijのAccountRestと対応するように書いていく&lt;br&gt;&#xA;🌷 IntelijではFormParamと書かれているがAndroidStudioではFieldと書く&#xA;&lt;img src=&#34;http://localhost:61148/images/app85.png&#34; alt=&#34;images&#34;&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 activity.sign_up_xmlで画面が小さいなぁって思ったら、ctrl押しながらカーソルころころすると、&#xA;&lt;img src=&#34;http://localhost:61148/images/app30.png&#34; alt=&#34;images&#34;&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 アップできます(o^―^o)ﾆｺ&#xA;&lt;img src=&#34;http://localhost:61148/images/app31.png&#34; alt=&#34;images&#34;&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 左側のButtonやTextBoxを引っ張ってきて配置できるので、&lt;br&gt;&#xA;&lt;img src=&#34;http://localhost:61148/images/app32.png&#34; alt=&#34;images&#34;&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 figma参考にしながらこのような画面を作る&#xA;&lt;img src=&#34;http://localhost:61148/images/app33.png&#34; alt=&#34;images&#34;&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 Buttonを選択しているとき、右のtextでRegisterと打ち、Enterを押すと、&lt;br&gt;&#xA;&lt;img src=&#34;http://localhost:61148/images/app34.png&#34; alt=&#34;images&#34;&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 ボタンにはRegisterと表示される&lt;br&gt;&#xA;🌷 右のidにはRegisterbuttonなどと入力しておく。（後で使う）&#xA;&lt;img src=&#34;http://localhost:61148/images/app35.png&#34; alt=&#34;images&#34;&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 次に、ボタンやテキストは、選択したときに出てくる青い点を縦横右左に引っ張って、端にくっつける&#xA;&lt;img src=&#34;http://localhost:61148/images/app36.png&#34; alt=&#34;images&#34;&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 くっつけた状態で配置したい位置に配置する&lt;br&gt;&#xA;&lt;img src=&#34;http://localhost:61148/images/app37.png&#34; alt=&#34;images&#34;&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 テキストボックスも同じようにtextをSignUpに変え、idもSignUpなどとし、Refactorを押す&lt;br&gt;&#xA;&lt;img src=&#34;http://localhost:61148/images/app38.png&#34; alt=&#34;images&#34;&gt;&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 このようになっていたらOK&#xA;&lt;img src=&#34;http://localhost:61148/images/app39.png&#34; alt=&#34;images&#34;&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 acitvity_sign_up.xmlの、Codeの方を選ぶと、このようなコードが書かれている&lt;br&gt;&#xA;🌷 以下の部分でSignUpのテキストのことが書かれている&lt;br&gt;&#xA;🌷 以下のように android:textAlignment=&amp;ldquo;center&amp;quot;を入れると、右でも左でもなく真ん中に来てくれる&lt;br&gt;&#xA;&lt;img src=&#34;http://localhost:61148/images/app40.png&#34; alt=&#34;images&#34;&gt;&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 android:textColor=&amp;quot;#000000&amp;rdquo;  色が黒にできる&lt;br&gt;&#xA;🌷 android:textSize=&amp;ldquo;38sp&amp;rdquo;  テキストのサイズを調節できる&lt;br&gt;&#xA;🌷 android:textStyle=&amp;ldquo;bold&amp;rdquo;  文字が太くなる&#xA;&lt;img src=&#34;http://localhost:61148/images/app42.png&#34; alt=&#34;images&#34;&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 Designに戻るとこんな風に表示される&#xA;&lt;img src=&#34;http://localhost:61148/images/app43.png&#34; alt=&#34;images&#34;&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 ここはmatch_parentにする&#xA;&lt;img src=&#34;http://localhost:61148/images/app44.png&#34; alt=&#34;images&#34;&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 次に入力画面を作りたいとき、Text の Plain Text を画面に引っ張ってくる&#xA;&lt;img src=&#34;http://localhost:61148/images/app45.png&#34; alt=&#34;images&#34;&gt;&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 android:hint=&amp;quot; Username&amp;quot; 薄く入力内容のヒントを書くときこのように書く&lt;br&gt;&#xA;🌷 textは消す&lt;br&gt;&#xA;&lt;img src=&#34;http://localhost:61148/images/app48.png&#34; alt=&#34;images&#34;&gt;&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 UsernameとPasswordそれぞれにidを設定し、壁に固定して、以下のようになるとOK&#xA;&lt;img src=&#34;http://localhost:61148/images/app50.png&#34; alt=&#34;images&#34;&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 空のテキストボックスも作る。これはエラーを表示させる場所。idも設定する&#xA;&lt;img src=&#34;http://localhost:61148/images/app53.png&#34; alt=&#34;images&#34;&gt;&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 次に、SettingActivityを作りたい&lt;br&gt;&#xA;&lt;img src=&#34;http://localhost:61148/images/app33.png&#34; alt=&#34;images&#34;&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 SignUpActivityを選択した状態で、File → New Activity → Empty Views Activityを押す&lt;br&gt;&#xA;🌷 この作り方だと、javaファイルだけでなく、xmlファイルも同時に作ってくれる👏&#x9;　　&#xA;&lt;img src=&#34;http://localhost:61148/images/app57.png&#34; alt=&#34;images&#34;&gt;&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 同時にAccountsListActivityも作る&lt;br&gt;&#xA;🌷 以下のようになれば正解&lt;br&gt;&#xA;&lt;img src=&#34;http://localhost:61148/images/app81.png&#34; alt=&#34;images&#34;&gt;&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 activity_settings.xmlをfigmaを見ながら作る&#xA;&lt;img src=&#34;http://localhost:61148/images/app33.png&#34; alt=&#34;images&#34;&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 パスワード変更のボタンを忘れていたので少しレイアウトが変わりました笑&lt;br&gt;&#xA;🌷 こちらを見よう見まねで作ってみましょう&lt;br&gt;&#xA;&lt;img src=&#34;http://localhost:61148/images/app86.png&#34; alt=&#34;images&#34;&gt;&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 次に、SignUpActivityに戻り、registerボタンを押すとSettings画面に遷移するようにする&lt;br&gt;&#xA;🌷 最初はこのようになっているはずだが、少なかったら以下のようにする&#xA;&lt;img src=&#34;http://localhost:61148/images/app64.png&#34; alt=&#34;images&#34;&gt;&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 以下のコードを追加する&lt;br&gt;&#xA;&lt;img src=&#34;http://localhost:61148/images/app65.png&#34; alt=&#34;images&#34;&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
