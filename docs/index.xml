<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nitta Labo Tutorial</title>
    <link>https://amika11071107.github.io/</link>
    <description>Recent content on Nitta Labo Tutorial</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 28 Dec 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://amika11071107.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Figma</title>
      <link>https://amika11071107.github.io/post/figma/</link>
      <pubDate>Sat, 28 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://amika11071107.github.io/post/figma/</guid>
      <description>&lt;p&gt;📖 これからやること&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;アカウント登録（サインアップ）、パスワード変更、アカウント一覧表示ができるAndroidアプリをUI（画面）作成からフロンドエンドまで作成し、実際にアプリを動かしてもらいます&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;19thの皆様へ、卒論のデータに用いるため、これから学習をする際の学習時間を計っていただきたいです。ご協力よろしくお願い致します。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;-sign-in-figmahttpswwwfigmacomlogin&#34;&gt;📚 &lt;a href=&#34;https://www.figma.com/login&#34;&gt;Sign in figma&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;↑ここからサインアップとサインインをしてください&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;-figmaとは&#34;&gt;🌞 &lt;strong&gt;Figmaとは&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;チームで画面デザイン（UI）を決めていくときに便利なWebサービスです&lt;/li&gt;&#xA;&lt;li&gt;チームで使うときは、複数人で同時作業もできます&lt;/li&gt;&#xA;&lt;li&gt;チームで開発するときにこの画面を見返すことによってどんなレイアウトだったか一目で確認することができます&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;-作っていきます&#34;&gt;🖊 作っていきます&lt;/h2&gt;&#xA;&lt;p&gt;🌷↓今から以下のような画面のデザインを作ってもらいます！  　⏰約30分&#xA;&lt;img src=&#34;https://amika11071107.github.io/images/figma16.png&#34; alt=&#34;images&#34;&gt;&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 サインアップの後、この画面が表示されていたらブラウザの←ボタンを押してください&lt;br&gt;&#xA;🌷これからの説明では、選択してほしいところをピンクで囲ったので、そこを追ってください &lt;br&gt;&#xA;&lt;img src=&#34;https://amika11071107.github.io/images/figma18.png&#34; alt=&#34;images&#34;&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 Draft（下書き）を押して、+Create new を押し、Design fileを押す&lt;br&gt;&#xA;&lt;img src=&#34;https://amika11071107.github.io/images/figma1.png&#34; alt=&#34;images&#34;&gt;&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 格子マークを押すと、Frameの種類が出てきます&lt;br&gt;&#xA;&lt;img src=&#34;https://amika11071107.github.io/images/figma9.png&#34; alt=&#34;images&#34;&gt;&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 一番上の Android Compact が Android 端末に一番近いサイズなので、選択しましょう&lt;br&gt;&#xA;&lt;img src=&#34;https://amika11071107.github.io/images/figma10.png&#34; alt=&#34;images&#34;&gt;&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 Frameを選択した状態でctrl+D を押すと重なるように複製されるので、以下のように3つ横に並べてください&lt;br&gt;&#xA;⭐ 作成中もし間違えてもctrl+zを押すと戻れます&lt;br&gt;&#xA;⭐ 作成中もし消したいものがでてきたら、消したいものを選択してキーボードのBackspaceを押すと消えます&#xA;&lt;img src=&#34;https://amika11071107.github.io/images/figma2.png&#34; alt=&#34;images&#34;&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 Tのマークはテキストを配置してくれるので、選択し、画像のように適した位置を選択する&lt;br&gt;&#xA;🌷 文字をSignUpと入力してみよう&#xA;&lt;img src=&#34;https://amika11071107.github.io/images/figma3.png&#34; alt=&#34;images&#34;&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 以下の位置（画像右下）で文字のサイズを調節できます&lt;br&gt;&#xA;&lt;img src=&#34;https://amika11071107.github.io/images/figma4.png&#34; alt=&#34;images&#34;&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 Layersには先程配置した３つの画面の名前があるので、それぞれ右クリック→ RenameでSignUp, Settings, Accountalist に名前を変更しましょう。&lt;br&gt;&#xA;～単語の先頭は大文字にするのが一般的～&#xA;🌷 すると、先ほど作ったFrameの左上にグレーで書いてある名前が変わったのが確認できます&lt;br&gt;&#xA;&lt;img src=&#34;https://amika11071107.github.io/images/figma5.png&#34; alt=&#34;images&#34;&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 先ほどまではFileというところにいましたが、Assetsというところを押すと、素材のテンプレがあるので、似たような素材を持ってこれます（今回は Contact Us を選択してください）&#xA;&lt;img src=&#34;https://amika11071107.github.io/images/figma6.png&#34; alt=&#34;images&#34;&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 すると、このようにテンプレが表示されると思います（SignUp画面とかぶってたら↓のように横に退けましょう&lt;br&gt;&#xA;🌷 これからテンプレの入力欄のデザインをSignUpに持っていきたいです&lt;br&gt;&#xA;🌷 テンプレは Examples/Contact Us という名前なのでそれを開いていき、その中のInput Field をctrl+d で複製してください&lt;br&gt;&#xA;🌷 すると、Input Fieldが新しくできると思うのでそれをドラック＆ドロップしてSignUpの中にいれます&lt;br&gt;&#xA;&lt;img src=&#34;https://amika11071107.github.io/images/figma19.png&#34; alt=&#34;images&#34;&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 そしてそのInput Fieldを押すと画像のように紫で選択されます&lt;br&gt;&#xA;🌷 これは何かと言いますと&amp;hellip;入力欄です！&#xA;&lt;img src=&#34;https://amika11071107.github.io/images/figma20.png&#34; alt=&#34;images&#34;&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 びよーんとSignUpのほうまで連れてきます&lt;br&gt;&#xA;&lt;img src=&#34;https://amika11071107.github.io/images/figma21.png&#34; alt=&#34;images&#34;&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷  小さくすると、入力欄がでてきました！このようにして、テンプレの素材を使えます&#xA;&lt;img src=&#34;https://amika11071107.github.io/images/figma22.png&#34; alt=&#34;images&#34;&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 同じようにボタンも持ってきて位置を整えると以下のようなものが作れます&lt;br&gt;&#xA;🌷画像と完璧に同じでなくていいです&lt;br&gt;&#xA;（このデザインはあくまでコードを書いていく上での下書きのようなものだから）&#xA;&lt;img src=&#34;https://amika11071107.github.io/images/figma7.png&#34; alt=&#34;images&#34;&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷SignUpを複製するなどして以下のように作りましょう&lt;br&gt;&#xA;🌷 次に右上のプロトタイプを押し、&lt;br&gt;&#xA;&lt;img src=&#34;https://amika11071107.github.io/images/figma16.png&#34; alt=&#34;images&#34;&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷ボタンから飛んでほしい画面に繋げる&#xA;&lt;img src=&#34;https://amika11071107.github.io/images/figma12.png&#34; alt=&#34;images&#34;&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷On tap は「クリックしたとき」なのでこのままでいい。  同様に、ListボタンからAccountListにも繋げる。&#xA;&lt;img src=&#34;https://amika11071107.github.io/images/figma13.png&#34; alt=&#34;images&#34;&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷▷を押すと、シミュレーションできる・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;&lt;img src=&#34;https://amika11071107.github.io/images/figma17.png&#34; alt=&#34;images&#34;&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;・&lt;br&gt;&#xA;🌷 以上でfigmaは終わり🎉&lt;/p&gt;</description>
    </item>
    <item>
      <title>Swagger</title>
      <link>https://amika11071107.github.io/post/swagger/</link>
      <pubDate>Sat, 28 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://amika11071107.github.io/post/swagger/</guid>
      <description>&lt;h2 id=&#34;-swagger-editorhttpseditorswaggerio&#34;&gt;📚 &lt;a href=&#34;https://editor.swagger.io/&#34;&gt;swagger editor&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;↑まずはここをクリック&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;-swaggerとは&#34;&gt;🌞 &lt;strong&gt;Swaggerとは&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;🌷 オンラインのアプリを作るには、バックエンド（Webサーバ上で動くプログラム）を開発する必要があります&lt;br&gt;&#xA;🌷 バックエンドのコードを書く前に、何のデータをどんな形でサーバに送るのか、アカウントがなかったらどのようなエラーを返すか（404？401？)などを決めておく必要があります。これを Web API と言います&lt;br&gt;&#xA;🌷 Web API （厳密には RESTful API）を決めるために、Swaggerというツールが便利です。バックエンドのコードを書くときには Swagger で決めた内容を確認しながら書いていきます&lt;/p&gt;&#xA;&lt;h2 id=&#34;-まずはパスの説明をします&#34;&gt;🖊 まずはパスの説明をします&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-パスとは何か&#34;&gt;1. パスとは何か？&lt;/h3&gt;&#xA;&lt;p&gt;🌷 パスは、Web サーバー上で特定のデータや機能にアクセスするための「住所」のようなものです。&lt;br&gt;&#xA;たとえば：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;住所（パス）: localhost:8080/accounts&lt;/li&gt;&#xA;&lt;li&gt;意味: 「アカウントの情報がある場所」&lt;/li&gt;&#xA;&lt;li&gt;これをブラウザやアプリが指定して、サーバーに「この住所にある情報をください」と頼む形です。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2-操作httpメソッドと組み合わせる&#34;&gt;2. 操作（HTTPメソッド）と組み合わせる&lt;/h3&gt;&#xA;&lt;p&gt;🌷 パスは操作の種類と一緒に使います。操作の種類は「HTTPメソッド」と呼ばれる以下のものです：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;GET: データを取得する（見るだけ）&lt;/li&gt;&#xA;&lt;li&gt;POST: 新しいデータを追加する（作る）&lt;/li&gt;&#xA;&lt;li&gt;PUT: データを更新する（書き換える）&lt;/li&gt;&#xA;&lt;li&gt;DELETE: データを削除する（消す）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;3-実際の例で説明&#34;&gt;3. 実際の例で説明&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;🌷 アカウント一覧を見る&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;パス：localhost:8080/accounts&lt;/li&gt;&#xA;&lt;li&gt;メソッド：GET&lt;br&gt;&#xA;→ 「アカウントが全部見たい！」と頼むと、一覧が返ってきます&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;🌷 新しいアカウントを作る&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;パス：localhost:8080/accounts&lt;/li&gt;&#xA;&lt;li&gt;メソッド：POST&lt;br&gt;&#xA;→ 「このアカウントIDとパスワードで新しいアカウントを作りたい！」と頼むと、サーバーが新しいアカウントを作り、保存してくれます&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;🌷 特定のアカウントの情報を見る&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;パス：localhost:8080/accounts/abc&lt;/li&gt;&#xA;&lt;li&gt;メソッド：GET&lt;br&gt;&#xA;→ 「abc というアカウントの情報が見たい！」と頼むと、そのアカウントの情報だけ返ってきます&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;🌷 特定のアカウントのパスワードを変える&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;パス：localhost:8080/accounts/abc/password&lt;/li&gt;&#xA;&lt;li&gt;メソッド：PUT&lt;br&gt;&#xA;→ 「abc のアカウントのパスワードをこれに変更して！」と頼むと、サーバーがそのパスワードを更新します&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;4-account_id-の役割&#34;&gt;4. {account_id} の役割&lt;/h3&gt;&#xA;&lt;p&gt;🌷 localhost:8080/accounts/{account_id} の {account_id} 部分は「特定のアカウントを指定するための場所」です&lt;br&gt;&#xA;🌷 実際には、この {account_id} の部分が具体的な値（例: abc や xyz）に置き換えられます&lt;/p&gt;</description>
    </item>
    <item>
      <title>Intellij IDEA</title>
      <link>https://amika11071107.github.io/post/intellij_idea/</link>
      <pubDate>Fri, 27 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://amika11071107.github.io/post/intellij_idea/</guid>
      <description>&lt;h2 id=&#34;-バックエンドを書くよ&#34;&gt;🌞 &lt;strong&gt;バックエンドを書くよ！&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;🌷 それでは、バックエンドのコードを書いていきましょう&lt;br&gt;&#xA;🌷 バックエンドのコードは、IntelliJ IDEA の Ultimate （学生および教職員向けの個人ライセンス）を使って書いていきます&lt;/p&gt;&#xA;&lt;p&gt;🌷 以下は19thのシトラスプロジェクトです🍊&lt;br&gt;&#xA;🌷 このように、プロジェクトでは entites, repositories, resources という3つのPakageを作り、その中に &#x9;javaファイルを作っていきます&lt;br&gt;&#xA;🌷 他のプロジェクトが開いた状態になっている人は、左上の4本線をクリックし、fileからclose projectを押します。&#xA;&lt;img src=&#34;https://amika11071107.github.io/images/in.png&#34; alt=&#34;images&#34;&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;-作っていきます&#34;&gt;🖊 作っていきます&lt;/h2&gt;&#xA;&lt;p&gt;🌷 以下の画面になると、まずはNewProjectを押します&#xA;&lt;img src=&#34;https://amika11071107.github.io/images/in0.png&#34; alt=&#34;images&#34;&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;🌷 左の Spring Bootを選択し、JDK は 21 以上にします&lt;br&gt;&#xA;🌷 Name は LessonServer と設定します&lt;br&gt;&#xA;🌷 Next を押し、&#xA;&lt;img src=&#34;https://amika11071107.github.io/images/in1.png&#34; alt=&#34;images&#34;&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;🌷 Jersey を選択し、Create を押します&#xA;&lt;img src=&#34;https://amika11071107.github.io/images/in2.png&#34; alt=&#34;images&#34;&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;🌷 LessonServer を右クリックし、その下に entites と、resources という名前の Package を作ります&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://amika11071107.github.io/images/in4.png&#34; alt=&#34;images&#34;&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;🌷 entitiesの中には、Account.java を作ります（画像では repositories パッケージが作られてしまっていますが無視してください）&#xA;&lt;img src=&#34;https://amika11071107.github.io/images/in5.png&#34; alt=&#34;images&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Postman</title>
      <link>https://amika11071107.github.io/post/postman/</link>
      <pubDate>Fri, 08 Mar 2019 00:00:00 +0000</pubDate>
      <guid>https://amika11071107.github.io/post/postman/</guid>
      <description>&lt;h2 id=&#34;-postmanhttpswwwpostmancomdownloads&#34;&gt;📚 &lt;a href=&#34;https://www.postman.com/downloads/&#34;&gt;PostMan&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;↑ここからデスクトップ版Postmanアプリをダウンロードできます&lt;/li&gt;&#xA;&lt;li&gt;Postmanにはweb版というブラウザで開けるものと、デスクトップ版があり、デスクトップ版しかlocalhost環境にアクセスできません&lt;/li&gt;&#xA;&lt;li&gt;デスクトップにPostmanアプリがない人はダウンロードしましょう&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Windows 64-bit などと書いたオレンジ色のボタンを押す&lt;/li&gt;&#xA;&lt;li&gt;ダウンロードしたexeを開く（setup)&lt;/li&gt;&#xA;&lt;li&gt;sign upする&lt;/li&gt;&#xA;&lt;li&gt;新しい Workspaces を作るので WorkSpaces と Create Workspace を押す &lt;br&gt;&#xA;&lt;img src=&#34;https://amika11071107.github.io/images/postman8.png&#34; alt=&#34;images&#34;&gt;&lt;/li&gt;&#xA;&lt;li&gt;名前をLessonServerなどと決め、指示に従っていく&lt;br&gt;&#xA;🌷 この画面が出たらOK&#xA;&lt;img src=&#34;https://amika11071107.github.io/images/postman9.png&#34; alt=&#34;images&#34;&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;-postmanとは&#34;&gt;🌞 &lt;strong&gt;Postmanとは&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;🌷 記述したバックエンドのコードが正しく動いているのかをテストするためのツールです&lt;br&gt;&#xA;🌷 バックエンドの Web API を呼び出して、何が返ってきているのかを可視化することができます&lt;/p&gt;&#xA;&lt;h2 id=&#34;-作っていきます&#34;&gt;🖊 作っていきます&lt;/h2&gt;&#xA;&lt;p&gt;🌷 + を押します&#xA;&lt;img src=&#34;https://amika11071107.github.io/images/postman1.png&#34; alt=&#34;images&#34;&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;🌷 Rest API basics を押します&#xA;&lt;img src=&#34;https://amika11071107.github.io/images/postman2.png&#34; alt=&#34;images&#34;&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;🌷 GET POST PUT DELが出てきます&lt;br&gt;&#xA;🌷 POSTを押します  &lt;br&gt;&#xA;&lt;img src=&#34;https://amika11071107.github.io/images/postman3.png&#34; alt=&#34;images&#34;&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;post&#34;&gt;Post&lt;/h2&gt;&#xA;&lt;p&gt;🌷 パスは &lt;strong&gt;&lt;span style=&#34;color:yellowgreen&#34;&gt;localhost:8080/accounts&lt;/span&gt;&lt;/strong&gt;と&lt;span style=&#34;color:deeppink&#34;&gt;入力&lt;/span&gt;  &lt;br&gt;&#xA;🌷 &lt;span style=&#34;color:deeppink&#34;&gt;Bodyを選択&lt;/span&gt; &lt;br&gt;&#xA;🌷 &lt;span style=&#34;color:deeppink&#34;&gt;x-www-form-urlencodedを選択&lt;/span&gt; &lt;br&gt;&#xA;🌷 &lt;span style=&#34;color:deeppink&#34;&gt;アカウントとパスワード&lt;/span&gt; の &lt;span style=&#34;color:purple&#34;&gt;KeyとValueを入力するための欄が出てきます&lt;/span&gt;&lt;br&gt;&#xA;🌷 &lt;span style=&#34;color:purple&#34;&gt;Key&lt;/span&gt; に &lt;span style=&#34;color:green&#34;&gt;account_id ,  password&lt;/span&gt;と&lt;span style=&#34;color:deeppink&#34;&gt;入力&lt;/span&gt;&lt;br&gt;&#xA;🌷 &lt;span style=&#34;color:purple&#34;&gt;Value&lt;/span&gt; に 自分のつけたいアカウント名とパスワードを&lt;span style=&#34;color:deeppink&#34;&gt;入力&lt;/span&gt; （ここでは myname と pass）&lt;br&gt;&#xA;（これがフォームデータとして &lt;span style=&#34;color:deeppink&#34;&gt;x-www-form-urlencoded&lt;/span&gt; 形式で送信される&lt;br&gt;&#xA;🌷 &lt;strong&gt;Intellij起動&lt;/strong&gt;して、&lt;br&gt;&#xA;🌷 &lt;span style=&#34;color:deeppink&#34;&gt;Sendを押すと&lt;/span&gt;&lt;br&gt;&#xA;🌷 &lt;span style=&#34;color:purple&#34;&gt;200か204&lt;/span&gt;と表示されるとOKです   &lt;br&gt;&#xA;🌷 &lt;strong&gt;&lt;span style=&#34;color:yellowgreen&#34;&gt;localhost:8080&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>AndroidStudio</title>
      <link>https://amika11071107.github.io/post/android_studio/</link>
      <pubDate>Tue, 05 Mar 2019 00:00:00 +0000</pubDate>
      <guid>https://amika11071107.github.io/post/android_studio/</guid>
      <description>&lt;h2 id=&#34;-フロンドエンド書いていくよ&#34;&gt;🌞 &lt;strong&gt;フロンドエンド書いていくよ！&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;🌷 スマホやPC上で動くプログラムをフロントエンドといいます&lt;br&gt;&#xA;🌷 ここでは、アンドロイド向けのアプリを開発するので、Android Studio を使います&lt;br&gt;&#xA;🌷 Android Studio は IntelliJ IDEA と同じ会社が開発している統合開発環境なので、使い方は変わりません。言語も同じ Java で書いていきます&lt;br&gt;&#xA;🌷 まず、Android Studio のプロジェクトを作成していきましょう&lt;/p&gt;&#xA;&lt;h2 id=&#34;手順を説明します&#34;&gt;🖊手順を説明します🐘&lt;/h2&gt;&#xA;&lt;p&gt;🌷 NewProjectを押します&lt;br&gt;&#xA;&lt;img src=&#34;https://amika11071107.github.io/images/app1.png&#34; alt=&#34;images&#34;&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;🌷 Empty Views Activity を押します&lt;br&gt;&#xA;&lt;img src=&#34;https://amika11071107.github.io/images/app2.png&#34; alt=&#34;images&#34;&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;🌷 Nameにタイトルを入力&lt;br&gt;&#xA;🌷 Build configuration languageを Groovy DSL にする&lt;br&gt;&#xA;🌷 Minimum SDKを API30 にする&lt;br&gt;&#xA;&lt;img src=&#34;https://amika11071107.github.io/images/app3.png&#34; alt=&#34;images&#34;&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;🌷 左上がProjectとなっていますが、準備中なので、「Android」と表示されるまで待ちます&lt;br&gt;&#xA;&lt;img src=&#34;https://amika11071107.github.io/images/app4.png&#34; alt=&#34;images&#34;&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;🌷 今、右で表示されている MainActivity.java のファイルの位置を確認します&lt;br&gt;&#xA;🌷 ＞をクリックしていきます&#xA;&lt;img src=&#34;https://amika11071107.github.io/images/app5.png&#34; alt=&#34;images&#34;&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;🌷 Androidでは画面のことをActivityといいます&lt;br&gt;&#xA;🌷 １つの画面ごとに [画面名]Activity.java と、 activity_[画面名].xml の2つを作ります&lt;br&gt;&#xA;🌷 プロジェクトツールウィンドウ（左の部分）を見ると、app/java/com/example/lessonに MainActivity.java があることが分かります。&lt;br&gt;&#xA;🌷 次に、activity_main.xml を押しましょう&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
